# class TreeNode:
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None
#
# 代码中的类名、方法名、参数名已经指定，请勿修改，直接返回方法规定的值即可
#
# 
# @param root TreeNode类 
# @return int整型
#
# def findlist(root,list,layer):
#     if root is None:
#         return
#     if len(list) < layer+1:
#         list.append([])

#     list[layer].append(root.val)

#     findlist(root.left,list,layer+1)
#     findlist(root.right,list,layer+1)

#     return 

def findlist(root,list,layer):
    if root is None:
        return
    if len(list) < layer+1:
        list.append(0)

    list[layer] += root.val

    findlist(root.left,list,layer+1)
    findlist(root.right,list,layer+1)

    return 

class Solution:
    def maxLevelSum(self , root: TreeNode) -> int:
        # write code here
        list = []
        layer = 0
        findlist(root,list,layer)
        max = 0
        index = 0
        for ind,i in enumerate(list):
            if i >= max:
                max = i
                index = ind + 1
        return index










