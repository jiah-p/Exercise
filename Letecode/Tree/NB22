# class TreeNode:
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None
#
# 代码中的类名、方法名、参数名已经指定，请勿修改，直接返回方法规定的值即可
#
# 
# @param root TreeNode类 
# @return int整型二维数组
#
class Solution:
    def ZLevelOrder(self , root: TreeNode) -> List[List[int]]:
        # write code here
        q = [root]
        layer = []
        flag = 0
        res = []
        if not root:
            return root
        while q:
            t = [0 for i in range(len(q))]
            i = 0
            # 处理当前层
            while q:
                temp = q.pop(0)
                if flag:
                    t[i] = temp.val
                else:
                    t[-i-1] = temp.val
                layer.append(temp)
                i += 1
            res.append(t)
            # print(layer)
            while layer:
                temp = layer.pop(0)
                if temp.right:
                    q.append(temp.right)
                if temp.left:
                    q.append(temp.left)
            flag ^= 1

        # for i in range(len(res)):
        #     if flag:
        #         res[i].reverse()
        #     flag ^= 1

        return res  

