# class ListNode:
#     def __init__(self, x):
#         self.val = x
#         self.next = None
#
# 代码中的类名、方法名、参数名已经指定，请勿修改，直接返回方法规定的值即可
#
# 
# @param head ListNode类 the head node
# @return ListNode类
#
class Solution:
    def sortInList(self , head: ListNode) -> ListNode:
        # write code here
        if not head:
            return None
        res=[]
        while head:
            res.append(head.val)
            head = head.next
        # 这个算投机取巧么？ 链表进行归并？ 好像可以。以后有空再实现，时间复杂应该也是nlogn
        # 注意返回的应该也是头节点
        # 可以用fast 和 slow 找 mid
        # 算法思想必须要有代码块思想：比如递归 
        res.sort()
        head = ListNode(None)
        cur = head
        for i in res:
            cur.next = ListNode(i)
            cur = cur.next
        return head.next
