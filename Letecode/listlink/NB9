from re import L
# class ListNode:
#     def __init__(self, x):
#         self.val = x
#         self.next = None
#
# 代码中的类名、方法名、参数名已经指定，请勿修改，直接返回方法规定的值即可
#
# 
# @param head ListNode类 
# @param x int整型 
# @return ListNode类
#
class Solution:
    def cow_partition(self , head: ListNode, x: int) -> ListNode:
        # write code here
        # phead = ListNode(None)
        # phead.next = head
        # pre = tail = phead
        # mid = head
        # while mid.val != x:
        #     pre = mid
        #     mid = mid.next
        # tail = mid
        
        # ccur = head
        # cpre = phead
        # while ccur != mid:
        #     if ccur.val > x:
        #         cpre.next = ccur.next
        #         ccur.next = tail.next
        #         tail.next = ccur
        #         tail = tail.next
        #         ccur = cpre.next
        #         continue
        #     cpre = ccur
        #     ccur = ccur.next
        # ccur = tail.next
        # cpre = tail
        # while ccur:
        #     if ccur.val <= x:
        #         cpre.next = ccur.next
        #         ccur.next = pre.next
        #         pre.next = ccur
        #         pre = pre.next
        #         ccur = cpre.next
        #         continue
        #     cpre = ccur
        #     ccur = ccur.next
        # return phead.next
        lhead = ListNode(None)
        rhead = ListNode(None)
        lcur, rcur = lhead,rhead
        cur = head
        lpre = lhead
        while cur:
            if cur.val < x:
                lcur.next= cur
                lpre = lcur
                lcur = lcur.next
            else:
                rcur.next = cur
                rcur = rcur.next
            temp = cur.next
            cur.next = None
            cur = temp
        lcur.next = rhead.next
        return lhead.next
        

        