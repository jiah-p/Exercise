#
# 代码中的类名、方法名、参数名已经指定，请勿修改，直接返回方法规定的值即可
#
# 递增路径的最大长度
# @param matrix int整型二维数组 描述矩阵的每个数
# @return int整型
#
class Solution:
    res = []
    def solve(self , matrix: List[List[int]]) -> int:
        # write code here
        row = len(matrix)
        col = len(matrix[0])
       
        def dfs(matrix,i,j,ans,l):
           
            row = len(matrix)
            col = len(matrix[0])
            cur = matrix[i][j]
            ans.append(cur)

            if len(ans) > l:
                self.res = ans.copy()
                l = len(self.res)
            if i-1 >= 0 and  matrix[i-1][j] > cur:
                dfs(matrix,i-1,j,ans,l)
            if j-1 >= 0 and  matrix[i][j-1] > cur:
                dfs(matrix,i,j-1,ans,l)
            if i+1 < row and  matrix[i+1][j] > cur:
                dfs(matrix,i+1,j,ans,l)
            if j+1 < col and  matrix[i][j+1] > cur:
                dfs(matrix,i,j+1,ans,l)
            ans.pop()

        for i in range(row):
            for j in range(col):
                dfs(matrix,i,j,[],len(self.res))

        return len(self.res)
            
